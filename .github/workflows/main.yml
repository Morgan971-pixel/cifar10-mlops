name: Azure ML CI/CD

on: 
  push:
    branches:
      - main # Trigger on pushes to the main branch

jobs:
  build-and-train:
    runs-on: ubuntu-latest # Use a Linux runner

    steps:
    - name: Checkout code
      uses: actions/checkout@v4 # Action to checkout your repository code

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10' # Ensure this matches your project's Python version

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r cifar10_cnn_project/requirements.txt # Install project dependencies
        pip install azure-cli azure-ai-ml azure-identity # Install Azure ML SDK and CLI

    - name: Azure Login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }} # Use GitHub Secret for Azure credentials

    - name: Submit Azure ML Training Job
      run: |
        python run_on_azure.py # Execute your script to submit the job

    # Optional: Add steps here to wait for the job to complete,
    # download outputs, or retrieve metrics if needed for subsequent steps.

  # deploy:
  #   needs: build-and-train # This job depends on the successful completion of build-and-train
  #   runs-on: ubuntu-latest
  #   environment: 'staging' # Optional: Define environments for deployments
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4

  #   - name: Set up Python
  #     uses: actions/setup-python@v5
  #     with:
  #       python-version: '3.10'

  #   - name: Install Azure ML SDK
  #     run: pip install azure-ai-ml azure-identity

  #   - name: Azure Login
  #     uses: azure/login@v2
  #     with:
  #       creds: ${{ secrets.AZURE_CREDENTIALS }}

  #   - name: Deploy Model to Staging
  #     run: |
  #       # This would involve a separate Python script (e.g., deploy_model.py)
  #       # that uses the Azure ML SDK to deploy the registered model.
  #       # You would pass the registered model name/version from the previous job's outputs.
  #       python deploy_model.py